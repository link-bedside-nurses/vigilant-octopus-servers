{"version":3,"file":"omitProperties.js","sourceRoot":"","sources":["../../../src/utils/omitProperties.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,SAAwB,cAAc,CACpC,GAAM,EACN,gBAAyB;IAEzB,IAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAE,gBAAgB,CAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAA;IAE7F,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,MAAM,CAAE,UAAE,GAAG,EAAE,IAAI;;QACnD,IAAK,CAAC,WAAW,CAAC,QAAQ,CAAE,IAAS,CAAE,EAAG,CAAC;YACzC,6BAAY,GAAG,gBAAG,IAAI,IAAG,GAAG,CAAC,IAAS,CAAC,OAAE;QAC3C,CAAC;QACD,OAAO,GAAG,CAAA;IACZ,CAAC,EAAE,EAAgB,CAAE,CAAA;IAErB,OAAO,MAAoB,CAAA;AAC7B,CAAC;AAdD,iCAcC","sourcesContent":["export default function omitProperties<T extends object, K extends keyof T>(\r\n  obj: T,\r\n  propertiesToOmit: K | K[],\r\n): Omit<T, K> {\r\n  const propsToOmit = Array.isArray( propertiesToOmit ) ? propertiesToOmit : [propertiesToOmit]\r\n\r\n  const result = Object.keys( obj ).reduce( ( acc, prop ) => {\r\n    if ( !propsToOmit.includes( prop as K ) ) {\r\n      return { ...acc, [prop]: obj[prop as K] }\r\n    }\r\n    return acc\r\n  }, {} as Partial<T> )\r\n\r\n  return result as Omit<T, K>\r\n}\r\n"]}