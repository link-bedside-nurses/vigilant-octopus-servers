{"version":3,"file":"express-callback.js","sourceRoot":"","sources":["../../../src/adapters/express-callback.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAwBA,SAAwB,YAAY,CAAE,kBAA6C;IAClF,OAAO,UAAE,OAAwB,EAAE,QAA0B,EAAE,IAA0B;QACxF,IAAM,WAAW,GAAG;YACnB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,OAAO,eACH,OAAO,CAAC,OAAO,CAClB;YACD,OAAO,EAAE,OAAO,CAAC,OAAO;SACxB,CAAA;QAED,kBAAkB,CAAE,WAAW,CAAE;aAC/B,IAAI,CAAE,UAAA,YAAY;YAClB,IAAK,YAAY,CAAC,OAAO,EAAG,CAAC;gBAC5B,QAAQ,CAAC,GAAG,CAAE,YAAY,CAAC,OAAO,CAAE,CAAA;YACrC,CAAC;YACD,QAAQ,CAAC,IAAI,CAAE,kBAAkB,CAAE,CAAA;YACnC,QAAQ,CAAC,MAAM,CAAE,YAAY,CAAC,UAAU,IAAI,GAAG,CAAE,CAAC,IAAI,cAAO,YAAY,CAAC,IAAI,EAAI,CAAA;QACnF,CAAC,CAAE;aACF,KAAK,CAAE,UAAA,KAAK;YACZ,OAAO,IAAI,CAAE,KAAK,CAAE,CAAA;QACrB,CAAC,CAAE,CAAA;IACL,CAAC,CAAA;AACF,CAAC;AA3BD,+BA2BC","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport express from 'express'\r\nimport { IncomingHttpHeaders } from 'http'\r\nimport { ACCOUNT } from '../interfaces'\r\n\r\nexport interface HTTPRequest<ParamsDictionary = any, RequestBody = any, QueryDictionary = any> {\r\n\tbody: RequestBody\r\n\tquery: QueryDictionary\r\n\tparams: ParamsDictionary\r\n\tip: string\r\n\tmethod: string\r\n\tpath: string\r\n\theaders: IncomingHttpHeaders\r\n\taccount?: ACCOUNT\r\n}\r\n\r\ninterface HTTPResponse {\r\n\theaders?: { [key: string]: string | undefined }\r\n\tbody: any\r\n\tstatusCode: number\r\n}\r\n\r\nexport type ControllerCallbackHandler = ( httpRequest: HTTPRequest ) => Promise<HTTPResponse>\r\n\r\nexport default function makeCallback( controllerCallback: ControllerCallbackHandler ) {\r\n\treturn ( request: express.Request, response: express.Response, next: express.NextFunction ) => {\r\n\t\tconst httpRequest = {\r\n\t\t\tbody: request.body,\r\n\t\t\tquery: request.query,\r\n\t\t\tparams: request.params,\r\n\t\t\tip: request.ip,\r\n\t\t\tmethod: request.method,\r\n\t\t\tpath: request.path,\r\n\t\t\theaders: {\r\n\t\t\t\t...request.headers,\r\n\t\t\t},\r\n\t\t\taccount: request.account,\r\n\t\t}\r\n\r\n\t\tcontrollerCallback( httpRequest )\r\n\t\t\t.then( httpResponse => {\r\n\t\t\t\tif ( httpResponse.headers ) {\r\n\t\t\t\t\tresponse.set( httpResponse.headers )\r\n\t\t\t\t}\r\n\t\t\t\tresponse.type( 'application/json' )\r\n\t\t\t\tresponse.status( httpResponse.statusCode || 200 ).send( { ...httpResponse.body } )\r\n\t\t\t} )\r\n\t\t\t.catch( error => {\r\n\t\t\t\treturn next( error )\r\n\t\t\t} )\r\n\t}\r\n}\r\n"]}