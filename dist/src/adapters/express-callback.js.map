{"version":3,"file":"express-callback.js","sourceRoot":"","sources":["../../../src/adapters/express-callback.ts"],"names":[],"mappings":";;;;;;;;;;;;;AA8BA,SAAwB,YAAY,CAChC,kBAA6C;IAE7C,OAAO,UACH,OAAwB,EACxB,QAA0B,EAC1B,IAA0B;QAE1B,IAAM,WAAW,GAAgB;YAC7B,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,OAAO,eACA,OAAO,CAAC,OAAO,CACrB;YACD,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,CAAC;QAEF,kBAAkB,CAAC,WAAW,CAAC;aAC1B,IAAI,CAAC,UAAA,YAAY;YACd,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;gBACvB,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YACvC,CAAC;YACD,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAClC,QAAQ;iBACH,MAAM,CAAC,YAAY,CAAC,UAAU,IAAI,GAAG,CAAC;iBACtC,IAAI,cAAM,YAAY,CAAC,IAAI,EAAG,CAAC;QACxC,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;AACN,CAAC;AAnCD,+BAmCC","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport express from \"express\";\r\nimport { IncomingHttpHeaders } from \"http\";\r\nimport { ACCOUNT } from \"../interfaces\";\r\n\r\nexport interface HTTPRequest<\r\n    ParamsDictionary = any,\r\n    RequestBody = any,\r\n    QueryDictionary = any,\r\n> {\r\n    body: RequestBody;\r\n    query: QueryDictionary;\r\n    params: ParamsDictionary;\r\n    ip: string | undefined;\r\n    method: string;\r\n    path: string;\r\n    headers: IncomingHttpHeaders;\r\n    account?: ACCOUNT;\r\n}\r\n\r\ninterface HTTPResponse {\r\n    headers?: { [key: string]: string | undefined };\r\n    body: any;\r\n    statusCode: number;\r\n}\r\n\r\nexport type ControllerCallbackHandler = (\r\n    httpRequest: HTTPRequest,\r\n) => Promise<HTTPResponse>;\r\n\r\nexport default function makeCallback(\r\n    controllerCallback: ControllerCallbackHandler,\r\n) {\r\n    return (\r\n        request: express.Request,\r\n        response: express.Response,\r\n        next: express.NextFunction,\r\n    ) => {\r\n        const httpRequest: HTTPRequest = {\r\n            body: request.body,\r\n            query: request.query,\r\n            params: request.params,\r\n            ip: request.ip,\r\n            method: request.method,\r\n            path: request.path,\r\n            headers: {\r\n                ...request.headers,\r\n            },\r\n            account: request.account,\r\n        };\r\n\r\n        controllerCallback(httpRequest)\r\n            .then(httpResponse => {\r\n                if (httpResponse.headers) {\r\n                    response.set(httpResponse.headers);\r\n                }\r\n                response.type(\"application/json\");\r\n                response\r\n                    .status(httpResponse.statusCode || 200)\r\n                    .send({ ...httpResponse.body });\r\n            })\r\n            .catch(error => {\r\n                return next(error);\r\n            });\r\n    };\r\n}\r\n"]}