{"version":3,"file":"controller.js","sourceRoot":"","sources":["../../../../src/modules/ratings/controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { HTTPRequest } from '../../adapters/express-callback'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport { db } from '../../db'\r\n\r\nexport function getAllRatings() {\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\treturn async function ( _: HTTPRequest<object> ) {\r\n\t\tconst ratings = await db.ratings.find( {} ).sort( { createdAt: \"desc\" } ).populate( 'patient' ).populate( 'caregiver' )\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: ratings,\r\n\t\t\t\tmessage: 'Rating retrieved',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function getRating() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }> ) {\r\n\t\tconst rating = await db.ratings.findById( request.params.id ).populate( 'patient' ).populate( 'caregiver' )\r\n\r\n\t\tif ( !rating ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'Not Rating found',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: rating,\r\n\t\t\t\tmessage: 'Rating retrieved',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function getCaregiverRatings() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }, object, object> ) {\r\n\t\tconst ratings = await db.ratings.find( {\r\n\t\t\tcaregiver: {\r\n\t\t\t\t_id: request.params.id\r\n\t\t\t}\r\n\t\t} ).populate( 'patient' ).populate( 'caregiver' ).sort( { createdAt: \"desc\" } )\r\n\r\n\r\n\t\tif ( ratings.length > 0 ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: ratings,\r\n\t\t\t\t\tmessage: 'Successfully fetched caregiver ratings',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\tmessage: 'No Rating Found',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function deleteRating() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }> ) {\r\n\t\tconst rating = await db.ratings.findByIdAndDelete( request.params.id ).populate( 'patient' ).populate( 'caregiver' )\r\n\r\n\t\tif ( !rating ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'Not such rating',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: rating,\r\n\t\t\t\tmessage: 'Rating deleted',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function addRating() {\r\n\treturn async function (\r\n\t\trequest: HTTPRequest<\r\n\t\t\t{ id: string },\r\n\t\t\t{\r\n\t\t\t\tvalue: number\r\n\t\t\t\treview: string\r\n\t\t\t}\r\n\t\t>,\r\n\t) {\r\n\t\tconst { review, value } = request.body\r\n\t\tconst { id } = request.params\r\n\r\n\t\tif ( !review || !value || !id ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.BAD_REQUEST,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'All fields must be sent',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst rating = await db.ratings.create( {\r\n\t\t\treview,\r\n\t\t\tvalue,\r\n\t\t\tcaregiver: id,\r\n\t\t\tpatient: request?.account?.id,\r\n\t\t} ).then( r => r.populate( 'patient' ).then( r => r.populate( 'caregiver' ) ) )\r\n\r\n\t\tawait rating.save()\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: rating,\r\n\t\t\t\tmessage: 'Rating Posted',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n"]}