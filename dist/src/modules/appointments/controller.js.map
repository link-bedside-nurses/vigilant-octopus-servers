{"version":3,"file":"controller.js","sourceRoot":"","sources":["../../../../src/modules/appointments/controller.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { HTTPRequest } from '../../adapters/express-callback'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport { db } from '../../db'\r\n\r\nexport function getAllAppointments() {\r\n\treturn async function ( _: HTTPRequest<object, object> ) {\r\n\t\tconst appointments = await db.appointments.find( {} ).sort( { createdAt: \"desc\" } ).populate( 'patient' ).populate( 'caregiver' )\r\n\t\tconsole.log( \"all:\", appointments )\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: appointments,\r\n\t\t\t\tmessage: appointments.length === 0 ? 'No Appointments Scheduled' : 'All appointments retrieved',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function getCaregiverAppointments() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }, object, object> ) {\r\n\t\tconst appointments = await db.appointments.find( {\r\n\t\t\tcaregiver: {\r\n\t\t\t\t_id: request.params.id\r\n\t\t\t}\r\n\t\t} ).populate( 'patient' ).populate( 'caregiver' )\r\n\r\n\t\tif ( appointments.length > 0 ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: appointments,\r\n\t\t\t\t\tmessage: 'Successfully fetched caregiver Appointments',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'No Appointment Found',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function getPatientAppointments() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }, object, object> ) {\r\n\t\tconst appointments = await db.appointments.find( {\r\n\t\t\tpatient: {\r\n\t\t\t\t_id: request.params.id\r\n\t\t\t}\r\n\t\t} ).populate( 'patient' ).populate( 'caregiver' )\r\n\r\n\t\tif ( appointments.length > 0 ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: appointments,\r\n\t\t\t\t\tmessage: 'Successfully fetched patient Appointments',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'No Appointment Found',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function scheduleAppointment() {\r\n\treturn async function ( request: HTTPRequest<object, {\r\n\t\ttitle: string\r\n\t\tcaregiverId: string\r\n\t\tdescription: string\r\n\t\tnotes: string\r\n\t}, object> ) {\r\n\t\tif ( !( request.body.title && request.body.description && request.body.notes ) ) {\r\n\t\t\tconst missingFields = [];\r\n\r\n\t\t\tif ( !request.body.title ) {\r\n\t\t\t\tmissingFields.push( 'title' );\r\n\r\n\t\t\t}\r\n\t\t\tif ( !request.body.caregiverId ) {\r\n\t\t\t\tmissingFields.push( 'caregiverId' );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !request.body.description ) {\r\n\t\t\t\tmissingFields.push( 'description' );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !request.body.notes ) {\r\n\t\t\t\tmissingFields.push( 'notes' );\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.BAD_REQUEST,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tmessage: `The following fields are missing: ${missingFields.join( ', ' )}`,\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst appointments = await db.appointments.create( {\r\n\t\t\ttitle: request.body.title,\r\n\t\t\tdescription: request.body.description,\r\n\t\t\tnotes: request.body.notes,\r\n\t\t\tpatient: request.account?.id,\r\n\t\t\tcaregiver: request.body.caregiverId\r\n\t\t} ).then( appointment => appointment.populate( \"patient\" ).then( appointment => appointment.populate( 'caregiver' ) ) )\r\n\r\n\t\tawait appointments.save()\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: appointments,\r\n\t\t\t\tmessage: 'Appointment Scheduled',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function confirmAppointment() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }, object> ) {\r\n\t\tconst appointment = await db.appointments.findById( request.params.id ).populate( 'patient' ).populate( 'caregiver' )\r\n\r\n\r\n\t\tconsole.log( \"params::id--> \", request.params.id )\r\n\r\n\t\tif ( !appointment ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'Could not confirm appointment.',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait appointment.confirmAppointment()\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: appointment,\r\n\t\t\t\tmessage: 'Appointment has been confirmed and initiated',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function cancelAppointment() {\r\n\treturn async function (\r\n\t\trequest: HTTPRequest<\r\n\t\t\t{ id: string },\r\n\t\t\t{\r\n\t\t\t\treason?: string\r\n\t\t\t}\r\n\t\t>,\r\n\t) {\r\n\t\tconst appointment = await db.appointments.findById( request.params.id ).populate( 'patient' ).populate( 'caregiver' )\r\n\r\n\t\tif ( !appointment ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'Could not cancel appointment.',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tawait appointment.cancelAppointment( request.body.reason )\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: appointment,\r\n\t\t\t\tmessage: 'Successfully cancelled appointment',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function getAppointment() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }> ) {\r\n\t\tconst appointment = await db.appointments.findById( request.params.id ).populate( \"caregiver\" ).populate( \"patient\" )\r\n\r\n\t\tif ( !appointment ) {\r\n\t\t\treturn {\r\n\t\t\t\tstatusCode: StatusCodes.NOT_FOUND,\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\tmessage: 'Could not get appointment.',\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: appointment,\r\n\t\t\t\tmessage: 'Successfully fetched appointment',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function deleteAppointment() {\r\n\treturn async function ( request: HTTPRequest<{ id: string }> ) {\r\n\t\tconst appointment = await db.appointments.findByIdAndDelete( request.params.id )\r\n\r\n\t\treturn {\r\n\t\t\tstatusCode: StatusCodes.OK,\r\n\t\t\tbody: {\r\n\t\t\t\tdata: appointment,\r\n\t\t\t\tmessage: 'Successfully deleted appointment',\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n"]}