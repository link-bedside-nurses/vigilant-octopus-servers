{"version":3,"file":"verify-refresh-token.js","sourceRoot":"","sources":["../../../src/middlewares/verify-refresh-token.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uDAA+C;AAE/C,kCAAoC;AACpC,iDAA4D;AAE5D,SAA8B,4BAA4B,CACzD,OAAkD,EAClD,SAAmB,EACnB,IAAkB;;;;;;oBAEZ,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAA;oBAEzC,KAAA,CAAC,YAAY,CAAA;4BAAb,wBAAa;oBAAO,qBAAM,IAAA,0BAAkB,EAAE,YAAY,CAAE,EAAA;;oBAA3C,KAAA,CAAC,CAAE,SAAwC,CAAE,CAAA;;;oBAAnE;wBACC,sBAAO,IAAI,CAAE,IAAI,iBAAS,CAAE,wBAAwB,EAAE,+BAAW,CAAC,YAAY,CAAE,CAAE,EAAA;oBAEnE,qBAAM,IAAA,0BAAkB,EAAE,YAAY,CAAE,EAAA;;oBAAlD,OAAO,GAAG,SAAwC;oBACxD,IAAK,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;wBAAG,sBAAO,IAAI,CAAE,IAAI,iBAAS,CAAE,wBAAwB,EAAE,+BAAW,CAAC,YAAY,CAAE,CAAE,EAAA;oBAEjH,OAAO,CAAC,OAAO,GAAG;wBACjB,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,KAAK,EAAE,EAAE;qBACT,CAAA;oBAED,IAAI,EAAE,CAAA;;;;;CACN;AApBD,+CAoBC","sourcesContent":["import type { NextFunction, Request, Response } from 'express'\r\nimport { StatusCodes } from 'http-status-codes'\r\n\r\nimport { Exception } from '../utils'\r\nimport { verifyRefreshToken } from '../services/token/token'\r\n\r\nexport default async function verifyRefreshTokenMiddleware(\r\n\trequest: Request<object, { refreshToken: string }>,\r\n\t_response: Response,\r\n\tnext: NextFunction,\r\n) {\r\n\tconst refreshToken = request.body.refreshToken\r\n\r\n\tif ( !refreshToken || !( await verifyRefreshToken( refreshToken ) ) )\r\n\t\treturn next( new Exception( 'Invalid refresh Token!', StatusCodes.UNAUTHORIZED ) )\r\n\r\n\tconst decoded = await verifyRefreshToken( refreshToken )\r\n\tif ( !decoded || !decoded.id ) return next( new Exception( 'Invalid refresh Token!', StatusCodes.UNAUTHORIZED ) )\r\n\r\n\trequest.account = {\r\n\t\tdesignation: decoded.designation,\r\n\t\tid: decoded.id,\r\n\t\tphone: '',\r\n\t}\r\n\r\n\tnext()\r\n}\r\n"]}