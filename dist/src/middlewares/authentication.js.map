{"version":3,"file":"authentication.js","sourceRoot":"","sources":["../../../src/middlewares/authentication.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAmC;AAEnC,uDAA+C;AAE/C,kCAAoC;AACpC,0CAA8C;AAG9C,SAAwB,YAAY,CAAE,OAAgB,EAAE,SAAmB,EAAE,IAAkB;IAC9F,IAAK,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,EAAG,CAAC;QAC1G,OAAO,IAAI,CAAE,IAAI,iBAAS,CAAE,eAAe,EAAE,+BAAW,CAAC,YAAY,CAAE,CAAE,CAAA;IAC1E,CAAC;IAED,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAE,SAAS,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IAExE,IAAK,CAAC,KAAK;QAAG,OAAO,IAAI,CAAE,IAAI,iBAAS,CAAE,gBAAgB,EAAE,+BAAW,CAAC,YAAY,CAAE,CAAE,CAAA;IAExF,IAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAE,KAAK,EAAE,2BAAe,CAAC,oBAAoB,EAAE,CAAmB,CAAA;IAE5F,IAAK,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;QAAG,OAAO,IAAI,CAAE,IAAI,iBAAS,CAAE,uBAAuB,EAAE,+BAAW,CAAC,YAAY,CAAE,CAAE,CAAA;IAEhH,OAAO,CAAC,OAAO,GAAG;QACjB,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,WAAW,EAAE,OAAO,CAAC,WAAW;KAChC,CAAA;IACD,IAAI,EAAE,CAAA;AACP,CAAC;AApBD,+BAoBC","sourcesContent":["import * as jwt from 'jsonwebtoken'\r\nimport type { NextFunction, Request, Response } from 'express'\r\nimport { StatusCodes } from 'http-status-codes'\r\n\r\nimport { Exception } from '../utils'\r\nimport { EnvironmentVars } from '../constants'\r\nimport { ITokenPayload } from '../services/token/token'\r\n\r\nexport default function authenticate( request: Request, _response: Response, next: NextFunction ) {\r\n\tif ( !request.headers.authorization || !request.headers.authorization.split( ' ' ).includes( 'Bearer' ) ) {\r\n\t\treturn next( new Exception( 'Unauthorized!', StatusCodes.UNAUTHORIZED ) )\r\n\t}\r\n\r\n\tconst token = request.headers.authorization.split( 'Bearer ' )[1].trim()\r\n\r\n\tif ( !token ) return next( new Exception( 'Missing token!', StatusCodes.UNAUTHORIZED ) )\r\n\r\n\tconst decoded = jwt.verify( token, EnvironmentVars.getAccessTokenSecret() ) as ITokenPayload\r\n\r\n\tif ( !decoded || !decoded.id ) return next( new Exception( 'Invalid Access Token!', StatusCodes.UNAUTHORIZED ) )\r\n\r\n\trequest.account = {\r\n\t\tid: decoded.id,\r\n\t\tphone: decoded.phone,\r\n\t\temail: decoded.email,\r\n\t\tdesignation: decoded.designation,\r\n\t}\r\n\tnext()\r\n}\r\n"]}