{"version":3,"file":"createAccessToken.js","sourceRoot":"","sources":["../../../../src/services/token/createAccessToken.ts"],"names":[],"mappings":";;;;;;AAAA,8DAA+B;AAG/B,sEAA+C;AAG/C,SAAgB,iBAAiB,CAAE,IAAmC;IACrE,OAAO,sBAAG,CAAC,IAAI,CACd;QACC,EAAE,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG;QACb,KAAK,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK;QAClB,KAAK,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK;QAClB,WAAW,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW;KAC9B,EACD,kBAAO,CAAC,oBAAoB,EAAgB,CAClC,CAAC;AACb,CAAC;AAVD,8CAUC","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { Document } from 'mongoose';\nimport { ACCOUNT } from '../../interfaces';\nimport EnvVars from \"../../constants/env-vars\";\n\n\nexport function createAccessToken( user: ( Document & ACCOUNT ) | null ): string {\n\treturn jwt.sign(\n\t\t{\n\t\t\tid: user?._id,\n\t\t\tphone: user?.phone,\n\t\t\temail: user?.email,\n\t\t\tdesignation: user?.designation,\n\t\t},\n\t\tEnvVars.getAccessTokenSecret() as jwt.Secret\n\t) as string;\n}\n"]}