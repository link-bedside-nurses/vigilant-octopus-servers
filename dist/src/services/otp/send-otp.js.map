{"version":3,"file":"send-otp.js","sourceRoot":"","sources":["../../../../src/services/otp/send-otp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAiC;AACjC,gDAA0B;AAC1B,mDAAyD;AAEzD,SAA8B,OAAO,CAAE,KAAa,EAAE,GAAW;;;;;wBAC/C,qBAAM,eAAK,CAAC,IAAI,CAAE,qDAAqD,EACvF;wBACC,UAAU,EAAE;4BACX;gCACC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;gCACjC,MAAM,EAAE,YAAY;gCACpB,MAAM,EAAE,4BAA4B,GAAG,GAAG;6BAC1C;yBACD;qBACD,EACC;wBACD,OAAO,EAAE;4BACR,aAAa,EAAE,2EAA2E;4BAC1F,cAAc,EAAE,kBAAkB;4BAClC,QAAQ,EAAE,kBAAkB;yBAC5B;wBACD,YAAY,EAAE,EAAE;qBAChB,CAAE,EAAA;;oBAjBE,QAAQ,GAAG,SAiBb;oBAEJ,sBAAO,QAAQ,EAAA;;;;CACf;AArBD,0BAqBC;AAED,SAAgB,WAAW;IAC1B,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAE,CAAC,CAAE,CAAA;IACtC,IAAM,GAAG,GAAG,MAAM,CAAE,QAAQ,CAAE,MAAM,CAAC,QAAQ,CAAE,KAAK,CAAE,EAAE,EAAE,CAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAA;IACvF,OAAO,GAAG,CAAA;AACX,CAAC;AAJD,kCAIC;AAED,SAAsB,QAAQ,CAAE,KAAa,EAAE,GAAW;;;YACzD,sBAAa,CAAC,GAAG,CAAE,KAAK,EAAE,GAAG,CAAE,CAAA;;;;CAC/B;AAFD,4BAEC;AAED,SAAsB,oBAAoB,CAAE,KAAa;;;YACxD,sBAAO,sBAAa,CAAC,GAAG,CAAE,KAAK,CAAE,EAAA;;;CACjC;AAFD,oDAEC","sourcesContent":["import * as crypto from 'crypto';\r\nimport axios from 'axios';\r\nimport { otpCacheStore } from '../../cache-store/client';\r\n\r\nexport default async function sendOTP( phone: string, otp: string ) {\r\n\tconst response = await axios.post( \"https://k24n8x.api.infobip.com//sms/2/text/advanced\",\r\n\t\t{\r\n\t\t\t\"messages\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"destinations\": [{ \"to\": phone }],\r\n\t\t\t\t\t\"from\": \"ServiceSMS\",\r\n\t\t\t\t\t\"text\": \"LINKBEDSIDES::Your OTP is \" + otp,\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\t, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `App 9fc830f221c28b354b493a57a4ff3f9e-a47fd25f-efa5-42e1-ac24-b8800accd9ca`,\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Accept': 'application/json'\r\n\t\t\t},\r\n\t\t\tmaxRedirects: 20\r\n\t\t} )\r\n\r\n\treturn response\r\n}\r\n\r\nexport function generateOTP() {\r\n\tconst buffer = crypto.randomBytes( 3 )\r\n\tconst otp = Number( parseInt( buffer.toString( 'hex' ), 16 ).toString().slice( 0, 6 ) )\r\n\treturn otp\r\n}\r\n\r\nexport async function storeOTP( phone: string, otp: string ): Promise<void> {\r\n\totpCacheStore.set( phone, otp )\r\n}\r\n\r\nexport async function getOTPFromCacheStore( phone: string ): Promise<string | undefined> {\r\n\treturn otpCacheStore.get( phone )\r\n}\r\n"]}