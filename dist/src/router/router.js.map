{"version":3,"file":"router.js","sourceRoot":"","sources":["../../../src/router/router.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0EAA8D;AAC9D,qEAAqD;AACrD,qEAAqD;AACrD,kEAA+C;AAC/C,kEAA+C;AAC/C,sEAAsD;AACtD,wEAA0D;AAC1D,gEAA2C;AAC3C,sEAAuD;AACvD,qEAAkD;AAClD,oDAA6B;AAC7B,0EAA0C;AAC1C,4DAAqC;AACrC,8CAAuB;AACvB,kDAA2B;AAC3B,kDAA2B;AAC3B,wCAAwC;AACxC,wDAA4B;AAC5B,0CAA8C;AAC9C,qFAA6D;AAC7D,iDAAiD;AACjD,sCAAiC;AACjC,mDAAqD;AACrD,uDAA6D;AAC7D,uDAA+C;AAE/C,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAE,IAAA,cAAI,GAAE,CAAE,CAAA;AACpB,MAAM,CAAC,GAAG,CAAE,IAAA,qBAAW,GAAE,CAAE,CAAA;AAC3B,MAAM,CAAC,GAAG,CAAE,IAAA,gBAAM,GAAE,CAAE,CAAA;AACtB,MAAM,CAAC,GAAG,CAAE,iBAAO,CAAC,IAAI,EAAE,CAAE,CAAA;AAC5B,MAAM,CAAC,GAAG,CAAE,iBAAO,CAAC,UAAU,CAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAE,CAAE,CAAA;AACtD,MAAM,CAAC,GAAG,CAAE,iBAAO,CAAC,MAAM,CAAE,mBAAI,CAAC,IAAI,CAAE,SAAS,EAAE,QAAQ,CAAE,CAAE,CAAE,CAAC;AAEjE,MAAM,CAAC,GAAG,CAAE,IAAA,gBAAM,EAAE,UAAU,EAAE;IAC5B,MAAM,EAAE;QACE,KAAK,YAAE,GAAG;;;;;;4BACN,GAAG,GAAG,IAAI,UAAU,CAAE,MAAM,CAAC,IAAI,CAAE,GAAG,CAAE,CAAE,CAAC;4BACjD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAE,GAAG,CAAE,CAAA;4BAC3B,qBAAM,IAAA,qBAAU,EAAE,2BAAe,CAAC,UAAU,EAAE,KAAK,aAAa,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,eAAe,EAAE,GAAG,CAAE,EAAA;;4BAA1G,SAA0G,CAAA;;;;;SAC7G;KACJ;CACJ,CAAE,CAAE,CAAA;AAEL,IAAM,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAA;AAChC,MAAM,CAAC,GAAG,CACN,IAAA,4BAAS,EAAE;IACP,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,2BAAe,CAAC,UAAU,EAAE,KAAK,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB;IACnF,QAAQ,EAAE;QACN,UAAU,EAAE,KAAK;QACjB,mBAAmB,EAAE,KAAK;KAC7B;CACJ,CAAE,CACN,CAAA;AAED,MAAM,CAAC,GAAG,CAAE,OAAO,EAAE,gBAAU,CAAE,CAAA;AACjC,MAAM,CAAC,GAAG,CAAE,OAAO,EAAE,gBAAU,CAAE,CAAA;AACjC,MAAM,CAAC,GAAG,CAAE,eAAe,EAAE,gBAAiB,CAAE,CAAA;AAChD,MAAM,CAAC,GAAG,CAAE,YAAY,EAAE,yBAAe,CAAE,CAAA;AAC3C,MAAM,CAAC,GAAG,CAAE,UAAU,EAAE,gBAAa,CAAE,CAAA;AACvC,MAAM,CAAC,GAAG,CAAE,UAAU,EAAE,gBAAa,CAAE,CAAA;AACvC,MAAM,CAAC,GAAG,CAAE,WAAW,EAAE,gBAAa,CAAE,CAAA;AACxC,MAAM,CAAC,GAAG,CAAE,aAAa,EAAE,gBAAe,CAAE,CAAA;AAC5C,MAAM,CAAC,GAAG,CAAE,SAAS,EAAE,iBAAW,CAAE,CAAA;AACpC,MAAM,CAAC,GAAG,CAAE,WAAW,EAAE,gBAAc,CAAE,CAAA;AACzC,MAAM,CAAC,GAAG,CAAE,MAAM,EAAE,mBAAS,CAAE,CAAA;AAC/B,MAAM,CAAC,GAAG,CAAE,OAAO,EAAE,qBAAW,CAAE,CAAA;AAClC,MAAM,CAAC,GAAG,CAAE,KAAK,EAAE,gBAAQ,CAAE,CAAA;AAE7B,MAAM,CAAC,GAAG,CAAE,0BAAe,CAAE,CAAA;AAE7B,MAAM,CAAC,GAAG,CAAE,UAAU,EAAE,UAAE,CAAC,EAAE,GAAG;IAC5B,GAAG,CAAC,SAAS,CAAE,cAAc,EAAE,WAAW,CAAE,CAAC;IAC7C,GAAG,CAAC,IAAI,CAAE,cAAI,CAAE,CAAC;AACrB,CAAC,CAAE,CAAC;AAEJ,MAAM,CAAC,GAAG,CAAE,GAAG,EAAE,UAAW,OAAwB,EAAE,QAA0B;IAC5E,OAAO,QAAQ,CAAC,MAAM,CAAE,+BAAW,CAAC,SAAS,CAAE,CAAC,IAAI,CAAE,EAAE,OAAO,EAAE,mBAAmB,EAAE,cAAc,EAAE,OAAO,CAAC,OAAO,EAAE,CAAE,CAAA;AAC7H,CAAC,CAAE,CAAA;AAEH,MAAM,CAAC,GAAG,CAAE,GAAG,EAAE,UAAW,OAAwB,EAAE,QAA0B;IAC5E,OAAO,QAAQ,CAAC,MAAM,CAAE,+BAAW,CAAC,SAAS,CAAE,CAAC,IAAI,CAAE,EAAE,OAAO,EAAE,kBAAkB,EAAE,cAAc,EAAE,OAAO,CAAC,OAAO,EAAE,CAAE,CAAA;AAC5H,CAAC,CAAE,CAAA;AAEH,kBAAe,MAAM,CAAA","sourcesContent":["import appointmentRouter from '../modules/appointments/routes'\r\nimport profileRouter from '../modules/profile/routes'\r\nimport ratingsRouter from '../modules/ratings/routes'\r\nimport testRouter from '../modules/test/routes'\r\nimport authRouter from '../modules/auth/routes'\r\nimport patientRouter from '../modules/patients/routes'\r\nimport caregiverRouter from '../modules/caregivers/routes'\r\nimport meRouter from '../modules/me/routes'\r\nimport paymentsRouter from '../modules/payments/routes'\r\nimport adminRouter from '../modules/admins/routes'\r\nimport express from 'express'\r\nimport rateLimit from 'express-rate-limit'\r\nimport compression from 'compression'\r\nimport cors from 'cors'\r\nimport helmet from 'helmet'\r\nimport morgan from 'morgan'\r\nimport { appendFile } from 'fs/promises'\r\nimport path from 'node:path'\r\nimport { EnvironmentVars } from '../constants'\r\nimport errorMiddleware from '../middlewares/error-middleware'\r\nimport { otpRouter } from '../modules/sms/routes'\r\nimport { html } from '../privacy'\r\nimport { emailRouter } from '../modules/email/routes'\r\nimport { dashboardRouter } from '../modules/dashboard/routes'\r\nimport { StatusCodes } from 'http-status-codes'\r\n\r\nconst router = express.Router();\r\n\r\nrouter.use( cors() )\r\nrouter.use( compression() )\r\nrouter.use( helmet() )\r\nrouter.use( express.json() )\r\nrouter.use( express.urlencoded( { extended: true } ) )\r\nrouter.use( express.static( path.join( __dirname, 'public' ) ) );\r\n\r\nrouter.use( morgan( 'combined', {\r\n    stream: {\r\n        async write( str ) {\r\n            const log = new Uint8Array( Buffer.from( str ) );\r\n            process.stdout.write( log )\r\n            await appendFile( EnvironmentVars.getNodeEnv() === 'development' ? 'logs.dev.log' : \"logs.prod.log\", log )\r\n        },\r\n    }\r\n} ) )\r\n\r\nconst ONE_MINUTE = 1 * 60 * 1000\r\nrouter.use(\r\n    rateLimit( {\r\n        windowMs: ONE_MINUTE,\r\n        limit: EnvironmentVars.getNodeEnv() === 'production' ? 60 : Number.MAX_SAFE_INTEGER,\r\n        validate: {\r\n            trustProxy: false,\r\n            xForwardedForHeader: false,\r\n        }\r\n    } ),\r\n)\r\n\r\nrouter.use( '/test', testRouter )\r\nrouter.use( '/auth', authRouter )\r\nrouter.use( '/appointments', appointmentRouter )\r\nrouter.use( '/dashboard', dashboardRouter )\r\nrouter.use( '/profile', profileRouter )\r\nrouter.use( '/ratings', ratingsRouter )\r\nrouter.use( '/patients', patientRouter )\r\nrouter.use( '/caregivers', caregiverRouter )\r\nrouter.use( '/admins', adminRouter )\r\nrouter.use( '/payments', paymentsRouter )\r\nrouter.use( '/otp', otpRouter )\r\nrouter.use( '/mail', emailRouter )\r\nrouter.use( '/me', meRouter )\r\n\r\nrouter.use( errorMiddleware )\r\n\r\nrouter.get( '/privacy', ( _, res ) => {\r\n    res.setHeader( 'Content-Type', 'text/html' );\r\n    res.send( html );\r\n} );\r\n\r\nrouter.use( '/', function ( request: express.Request, response: express.Response ) {\r\n    return response.status( StatusCodes.NOT_FOUND ).send( { message: 'SERVER IS ONLINE!', requestHeaders: request.headers } )\r\n} )\r\n\r\nrouter.use( '*', function ( request: express.Request, response: express.Response ) {\r\n    return response.status( StatusCodes.NOT_FOUND ).send( { message: 'ROUTE NOT FOUND!', requestHeaders: request.headers } )\r\n} )\r\n\r\nexport default router\r\n\r\n"]}