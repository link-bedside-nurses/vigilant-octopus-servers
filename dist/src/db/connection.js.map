{"version":3,"file":"connection.js","sourceRoot":"","sources":["../../../src/db/connection.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAA+B;AAE/B,2DAAoC;AACpC,0CAA8C;AAC9C,mCAAkH;AAGlH,0EAA0E;AAC1E,IAAM,uBAAuB,GAAG,2BAAe,CAAC,cAAc,EAAE,CAAA;AAChE,IAAM,aAAa,GAAG,2BAAe,CAAC,eAAe,EAAE,CAAA;AAEvD,SAAsB,iBAAiB;;;;;;;oBAElB,qBAAM,kBAAQ,CAAC,OAAO,CAAE,uBAAuB,EAAE;4BACnE,MAAM,EAAE,aAAa;yBACrB,CAAE,EAAA;;oBAFG,UAAU,GAAG,SAEhB;oBAEH,gBAAM,CAAC,IAAI,CAAE,qBAAc,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,CAAE,CAAE,CAAA;;;;oBAEpE,gBAAM,CAAC,KAAK,CAAE,OAAK,CAAE,CAAA;oBACrB,OAAO,CAAC,IAAI,CAAE,CAAC,CAAE,CAAA;;;;;;CAElB;AAXD,8CAWC;AAED,SAAsB,sBAAsB;;;;;;;yBAErC,kBAAQ,CAAC,UAAU,CAAC,EAAE,EAAtB,wBAAsB;oBAC1B,qBAAM,kBAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,EAAA;;oBAAjC,SAAiC,CAAA;oBACjC,gBAAM,CAAC,IAAI,CAAE,uBAAuB,CAAE,CAAA;;wBAEvC,sBAAM;;;oBAEN,gBAAM,CAAC,KAAK,CAAE,OAAK,EAAE,wBAAwB,CAAE,CAAA;;;;;;CAEhD;AAVD,wDAUC;AAED,SAAsB,YAAY;;;;;;;oBAEhC,qBAAM,IAAA,qBAAc,GAAE,EAAA;;oBAAtB,SAAsB,CAAA;oBACtB,qBAAM,IAAA,iBAAU,GAAE,EAAA;;oBAAlB,SAAkB,CAAA;oBAClB,qBAAM,IAAA,mBAAY,GAAE,EAAA;;oBAApB,SAAoB,CAAA;oBACpB,qBAAM,IAAA,uBAAgB,GAAE,EAAA;;oBAAxB,SAAwB,CAAA;oBACxB,qBAAM,IAAA,kBAAW,GAAE,EAAA;;oBAAnB,SAAmB,CAAA;oBACnB,qBAAM,IAAA,mBAAY,GAAE,EAAA;;oBAApB,SAAoB,CAAA;oBAEpB,OAAO,CAAC,GAAG,CAAE,kCAAkC,CAAE,CAAC;;;;oBAElD,OAAO,CAAC,KAAK,CAAE,yBAAyB,EAAE,OAAK,CAAE,CAAC;;;;;;CAEnD;AAbD,oCAaC;AAED,kBAAkB","sourcesContent":["import mongoose from 'mongoose'\r\n\r\nimport logger from '../utils/logger'\r\nimport { EnvironmentVars } from '../constants'\r\nimport { seedCaregivers, seedPatients, seedAdmins, seedPayments, seedAppointments, seedRatings } from '../db/seed'\r\n\r\n\r\n// const DATABASE_CONNECTION_URI_DEV = EnvironmentVars.getDevDatabaseUrl()\r\nconst DATABASE_CONNECTION_URI = EnvironmentVars.getDatabaseUrl()\r\nconst DATABASE_NAME = EnvironmentVars.getDatabaseName()\r\n\r\nexport async function connectToDatabase() {\r\n\ttry {\r\n\t\tconst connection = await mongoose.connect( DATABASE_CONNECTION_URI, {\r\n\t\t\tdbName: DATABASE_NAME,\r\n\t\t} )\r\n\r\n\t\tlogger.info( `Connected: ${connection.connection.db.databaseName}` )\r\n\t} catch ( error ) {\r\n\t\tlogger.error( error )\r\n\t\tprocess.exit( 1 )\r\n\t}\r\n}\r\n\r\nexport async function disconnectFromDatabase() {\r\n\ttry {\r\n\t\tif ( mongoose.connection.id ) {\r\n\t\t\tawait mongoose.connection.close()\r\n\t\t\tlogger.info( 'disconnecting from db' )\r\n\t\t}\r\n\t\treturn\r\n\t} catch ( error ) {\r\n\t\tlogger.error( error, 'Error disconnecting db' )\r\n\t}\r\n}\r\n\r\nexport async function seedDatabase() {\r\n\ttry {\r\n\t\tawait seedCaregivers()\r\n\t\tawait seedAdmins()\r\n\t\tawait seedPatients()\r\n\t\tawait seedAppointments()\r\n\t\tawait seedRatings()\r\n\t\tawait seedPayments()\r\n\r\n\t\tconsole.log( 'Seed data inserted successfully!' );\r\n\t} catch ( error ) {\r\n\t\tconsole.error( 'Error seeding database:', error );\r\n\t}\r\n}\r\n\r\n// seedDatabase();\r\n"]}